// @ts-nocheck
/* eslint-disable */
/* This file was generated by Unframer for Framer project 4b3cbb0c99274521 "Bakalarka", do not edit manually */
"use client";

/**
 * @typedef Locale
 * string
 */

/**
 * @typedef {{
 * children?: React.ReactNode
 * locale?: Locale
 * style?: React.CSSProperties
 * className?: string
 * id?: string
 * ref?: any
 * width?: any
 * height?: any
 * layoutId?: string
 * variant?: 'Desktop' | 'Tablet' | 'Phone' // Variant
}} Props

 */
import { stdin_default } from "./chunks/chunk-I2OZVXB3.js";
import { className, css, fonts } from "./chunks/chunk-3FZQO4KW.js";
import { routes } from "./chunks/chunk-GZZHFEEK.js";

// virtual:login-form
import { Fragment as Fragment2 } from "react";
import { ContextProviders } from "unframer";

// /:https://framerusercontent.com/modules/UYxMCY7rFG3SdHMEQZIu/FbPxiIHFSM70Vkidh5NK/VFztsADxe.js
import {
	jsx as _jsx,
	jsxs as _jsxs,
	Fragment as _Fragment,
} from "react/jsx-runtime";
import {
	addFonts,
	addPropertyControls,
	ComponentViewportProvider,
	ControlType,
	cx,
	FormContainer,
	FormPlainTextInput,
	getFonts,
	getFontsFromSharedStyle,
	Link,
	RichText,
	SmartComponentScopedContainer,
	useComponentViewport,
	useLocaleInfo,
	useVariantState,
	withCSS,
} from "unframer";
import { LayoutGroup, motion, MotionConfigContext } from "unframer";
import * as React from "react";
import { useRef } from "react";
var ButtonFonts = getFonts(stdin_default);
var cycleOrder = ["LkBTgoEvc", "URM2mAndj", "B9yqdV5oF"];
var serializationHash = "framer-6Tj82";
var variantClassNames = {
	B9yqdV5oF: "framer-v-1xy5h6i",
	LkBTgoEvc: "framer-v-1moatb4",
	URM2mAndj: "framer-v-20u5vf",
};
function addPropertyOverrides(overrides, ...variants) {
	const nextOverrides = {};
	variants?.forEach(
		(variant) => variant && Object.assign(nextOverrides, overrides[variant]),
	);
	return nextOverrides;
}
var transition1 = {
	bounce: 0.2,
	delay: 0,
	duration: 0.4,
	type: "spring",
};
var Transition = ({ value, children }) => {
	const config = React.useContext(MotionConfigContext);
	const transition = value ?? config.transition;
	const contextValue = React.useMemo(
		() => ({
			...config,
			transition,
		}),
		[JSON.stringify(transition)],
	);
	return (
		<MotionConfigContext.Provider value={contextValue}>
			{children}
		</MotionConfigContext.Provider>
	);
};
var Variants = motion.create(React.Fragment);
var humanReadableVariantMap = {
	Desktop: "LkBTgoEvc",
	Phone: "B9yqdV5oF",
	Tablet: "URM2mAndj",
};
var getProps = ({ height, id, width, ...props }) => {
	return {
		...props,
		variant:
			humanReadableVariantMap[props.variant] ?? props.variant ?? "LkBTgoEvc",
	};
};
var createLayoutDependency = (props, variants) => {
	if (props.layoutDependency)
		return variants.join("-") + props.layoutDependency;
	return variants.join("-");
};
var Component = /* @__PURE__ */ React.forwardRef(function (props, ref) {
	const fallbackRef = useRef(null);
	const refBinding = ref ?? fallbackRef;
	const defaultLayoutId = React.useId();
	const { activeLocale, setLocale } = useLocaleInfo();
	const componentViewport = useComponentViewport();
	const {
		style,
		className: className2,
		layoutId,
		variant,
		...restProps
	} = getProps(props);
	const {
		baseVariant,
		classNames,
		clearLoadingGesture,
		gestureHandlers,
		gestureVariant,
		isLoading,
		setGestureState,
		setVariant,
		variants,
	} = useVariantState({
		cycleOrder,
		defaultVariant: "LkBTgoEvc",
		ref: refBinding,
		variant,
		variantClassNames,
	});
	const layoutDependency = createLayoutDependency(props, variants);
	const sharedStyleClassNames = [className];
	const scopingClassNames = cx(serializationHash, ...sharedStyleClassNames);
	return (
		<LayoutGroup id={layoutId ?? defaultLayoutId}>
			<Variants animate={variants} initial={false}>
				<Transition value={transition1}>
					<FormContainer
						{...restProps}
						{...gestureHandlers}
						className={cx(
							scopingClassNames,
							"framer-1moatb4",
							className2,
							classNames,
						)}
						data-framer-name={"Desktop"}
						layoutDependency={layoutDependency}
						layoutId={"LkBTgoEvc"}
						nodeId={"LkBTgoEvc"}
						ref={refBinding}
						style={{
							backgroundColor: "rgb(255, 255, 255)",
							boxShadow: "0px 1px 2px 0px rgba(0, 0, 0, 0.25)",
							...style,
						}}
						{...addPropertyOverrides(
							{
								B9yqdV5oF: {
									"data-framer-name": "Phone",
								},
								URM2mAndj: {
									"data-framer-name": "Tablet",
								},
							},
							baseVariant,
							gestureVariant,
						)}
					>
						{(formState) => (
							<_Fragment>
								<RichText
									__fromCanvasComponent={true}
									className={"framer-1604brc"}
									fonts={["Inter-Bold"]}
									layoutDependency={layoutDependency}
									layoutId={"EZYza6AlQ"}
									style={{
										"--extracted-r6o4lv": "rgb(24, 31, 90)",
										"--framer-link-text-color": "rgb(0, 153, 255)",
										"--framer-link-text-decoration": "underline",
									}}
									verticalAlignment={"top"}
									withExternalLayout={true}
								>
									<React.Fragment>
										<motion.p
											style={{
												"--font-selector": "SW50ZXItQm9sZA==",
												"--framer-font-family":
													'"Inter", "Inter Placeholder", sans-serif',
												"--framer-font-size": "20px",
												"--framer-font-weight": "700",
												"--framer-text-alignment": "center",
												"--framer-text-color":
													"var(--extracted-r6o4lv, rgb(24, 31, 90))",
											}}
										>
											{"P\u0159ihl\xE1\u0161en\xED"}
										</motion.p>
									</React.Fragment>
								</RichText>
								<motion.label
									className={"framer-12u8737"}
									layoutDependency={layoutDependency}
									layoutId={"HVngJsmzQ"}
								>
									<RichText
										__fromCanvasComponent={true}
										className={"framer-15x02ew"}
										fonts={["Inter-Medium"]}
										layoutDependency={layoutDependency}
										layoutId={"LHl0H8F72"}
										style={{
											"--extracted-r6o4lv": "rgb(24, 31, 90)",
										}}
										verticalAlignment={"top"}
										withExternalLayout={true}
									>
										<React.Fragment>
											<motion.p
												style={{
													"--font-selector": "SW50ZXItTWVkaXVt",
													"--framer-font-family":
														'"Inter", "Inter Placeholder", sans-serif',
													"--framer-font-weight": "500",
													"--framer-text-color":
														"var(--extracted-r6o4lv, rgb(24, 31, 90))",
												}}
											>
												{"Email *"}
											</motion.p>
										</React.Fragment>
									</RichText>
									<FormPlainTextInput
										className={"framer-1myobz8"}
										inputName={"Jane@austin"}
										layoutDependency={layoutDependency}
										layoutId={"SAoyxkIrG"}
										placeholder={"Zadejte sv\u016Fj e-mail"}
										required={true}
										style={{
											"--framer-input-border-bottom-width": "2px",
											"--framer-input-border-color":
												"rgba(113, 114, 127, 0.35)",
											"--framer-input-border-left-width": "2px",
											"--framer-input-border-radius-bottom-left": "10px",
											"--framer-input-border-radius-bottom-right": "10px",
											"--framer-input-border-radius-top-left": "10px",
											"--framer-input-border-radius-top-right": "10px",
											"--framer-input-border-right-width": "2px",
											"--framer-input-border-style": "solid",
											"--framer-input-border-top-width": "2px",
											"--framer-input-font-color": "rgb(153, 153, 153)",
											"--framer-input-icon-color": "rgb(153, 153, 153)",
											"--framer-input-placeholder-color": "rgb(153, 153, 153)",
										}}
										type={"email"}
									/>
								</motion.label>
								<motion.div
									className={"framer-mq0wnv"}
									layoutDependency={layoutDependency}
									layoutId={"SHqc7nhQ1"}
								>
									<motion.label
										className={"framer-6asc0j"}
										layoutDependency={layoutDependency}
										layoutId={"UYCHJjsTl"}
									>
										<RichText
											__fromCanvasComponent={true}
											className={"framer-nhc16f"}
											fonts={["Inter-Medium"]}
											layoutDependency={layoutDependency}
											layoutId={"gLMQcib5r"}
											style={{
												"--extracted-r6o4lv": "rgb(24, 31, 90)",
											}}
											verticalAlignment={"top"}
											withExternalLayout={true}
										>
											<React.Fragment>
												<motion.p
													style={{
														"--font-selector": "SW50ZXItTWVkaXVt",
														"--framer-font-family":
															'"Inter", "Inter Placeholder", sans-serif',
														"--framer-font-weight": "500",
														"--framer-text-color":
															"var(--extracted-r6o4lv, rgb(24, 31, 90))",
													}}
												>
													{"Heslo *"}
												</motion.p>
											</React.Fragment>
										</RichText>
										<FormPlainTextInput
											className={"framer-1vw3r3o"}
											inputName={"Heslo"}
											layoutDependency={layoutDependency}
											layoutId={"G2ikWr1FP"}
											placeholder={"Zadejte sv\xE9 heslo"}
											required={true}
											style={{
												"--framer-input-border-bottom-width": "2px",
												"--framer-input-border-color":
													"rgba(113, 114, 127, 0.35)",
												"--framer-input-border-left-width": "2px",
												"--framer-input-border-radius-bottom-left": "10px",
												"--framer-input-border-radius-bottom-right": "10px",
												"--framer-input-border-radius-top-left": "10px",
												"--framer-input-border-radius-top-right": "10px",
												"--framer-input-border-right-width": "2px",
												"--framer-input-border-style": "solid",
												"--framer-input-border-top-width": "2px",
												"--framer-input-font-color": "rgb(153, 153, 153)",
												"--framer-input-icon-color": "rgb(153, 153, 153)",
												"--framer-input-placeholder-color":
													"rgb(153, 153, 153)",
											}}
											type={"text"}
										/>
									</motion.label>
									<RichText
										__fromCanvasComponent={true}
										className={"framer-1fc3fxl"}
										fonts={["Inter"]}
										layoutDependency={layoutDependency}
										layoutId={"B44WAoB1t"}
										style={{
											"--extracted-r6o4lv": "rgb(113, 114, 127)",
										}}
										verticalAlignment={"top"}
										withExternalLayout={true}
									>
										<React.Fragment>
											<motion.p
												style={{
													"--framer-font-size": "12px",
													"--framer-text-color":
														"var(--extracted-r6o4lv, rgb(113, 114, 127))",
												}}
											>
												<Link
													href={"/forgottenpassword"}
													motionChild={true}
													nodeId={"B44WAoB1t"}
													openInNewTab={true}
													relValues={[]}
													scopeId={"VFztsADxe"}
													smoothScroll={false}
												>
													<motion.a
														className={"framer-styles-preset-iczto2"}
														data-styles-preset={"zHh2JmvMQ"}
													>
														{"Zapomenut\xE9 heslo"}
													</motion.a>
												</Link>
											</motion.p>
										</React.Fragment>
									</RichText>
								</motion.div>
								<ComponentViewportProvider
									height={45}
									width={`calc(${componentViewport?.width || "100vw"} - 80px)`}
									y={
										(componentViewport?.y || 0) +
										30 +
										(((componentViewport?.height || 328) - 60 - 284.8) / 2 +
											179.8 +
											60)
									}
								>
									<SmartComponentScopedContainer
										className={"framer-1r42p8d-container"}
										layoutDependency={layoutDependency}
										layoutId={"Mt5EvAkV8-container"}
										nodeId={"Mt5EvAkV8"}
										rendersWithMotion={true}
										scopeId={"VFztsADxe"}
									>
										{_jsx(stdin_default, {
											height: "100%",
											id: "Mt5EvAkV8",
											Jmi2dMDKA: "P\u0159ihl\xE1sit se",
											layoutId: "Mt5EvAkV8",
											style: {
												height: "100%",
												width: "100%",
											},
											variant: "Jcrvt7Mqm",
											width: "100%",
										})}
									</SmartComponentScopedContainer>
								</ComponentViewportProvider>
							</_Fragment>
						)}
					</FormContainer>
				</Transition>
			</Variants>
		</LayoutGroup>
	);
});
var css2 = [
	"@supports (aspect-ratio: 1) { body { --framer-aspect-ratio-supported: auto; } }",
	".framer-6Tj82.framer-pcdsht, .framer-6Tj82 .framer-pcdsht { display: block; }",
	".framer-6Tj82.framer-1moatb4 { align-content: center; align-items: center; display: flex; flex-direction: column; flex-wrap: nowrap; gap: 20px; height: 328px; justify-content: center; max-width: 320px; min-width: 230px; overflow: hidden; padding: 30px 40px 30px 40px; position: relative; width: 320px; }",
	".framer-6Tj82 .framer-1604brc, .framer-6Tj82 .framer-15x02ew, .framer-6Tj82 .framer-nhc16f, .framer-6Tj82 .framer-1fc3fxl { flex: none; height: auto; position: relative; white-space: pre; width: auto; }",
	".framer-6Tj82 .framer-12u8737, .framer-6Tj82 .framer-6asc0j { align-content: flex-start; align-items: flex-start; display: flex; flex: none; flex-direction: column; flex-wrap: nowrap; gap: 10px; height: min-content; justify-content: flex-start; padding: 0px; position: relative; width: 100%; }",
	'.framer-6Tj82 .framer-1myobz8, .framer-6Tj82 .framer-1vw3r3o { --framer-input-focused-border-color: #0099ff; --framer-input-focused-border-style: solid; --framer-input-focused-border-width: 1px; --framer-input-font-family: "Inter"; --framer-input-font-letter-spacing: 0em; --framer-input-font-line-height: 1.2em; --framer-input-font-size: 14px; --framer-input-font-weight: 400; --framer-input-padding: 12px; flex: none; height: 40px; position: relative; width: 100%; }',
	".framer-6Tj82 .framer-mq0wnv { align-content: center; align-items: center; display: flex; flex: none; flex-direction: column; flex-wrap: nowrap; gap: 3px; height: min-content; justify-content: center; overflow: hidden; padding: 0px; position: relative; width: 100%; }",
	".framer-6Tj82 .framer-1r42p8d-container { flex: none; height: 45px; position: relative; width: 100%; }",
	...css,
];
var FramerVFztsADxe = withCSS(Component, css2, "framer-6Tj82");
var stdin_default2 = FramerVFztsADxe;
FramerVFztsADxe.displayName = "Login Form";
FramerVFztsADxe.defaultProps = {
	height: 328,
	width: 320,
};
addPropertyControls(FramerVFztsADxe, {
	variant: {
		options: ["LkBTgoEvc", "URM2mAndj", "B9yqdV5oF"],
		optionTitles: ["Desktop", "Tablet", "Phone"],
		title: "Variant",
		type: ControlType.Enum,
	},
});
addFonts(
	FramerVFztsADxe,
	[
		{
			explicitInter: true,
			fonts: [
				{
					family: "Inter",
					source: "framer",
					style: "normal",
					unicodeRange:
						"U+0460-052F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE2F",
					url: "https://framerusercontent.com/assets/DpPBYI0sL4fYLgAkX8KXOPVt7c.woff2",
					weight: "700",
				},
				{
					family: "Inter",
					source: "framer",
					style: "normal",
					unicodeRange: "U+0301, U+0400-045F, U+0490-0491, U+04B0-04B1, U+2116",
					url: "https://framerusercontent.com/assets/4RAEQdEOrcnDkhHiiCbJOw92Lk.woff2",
					weight: "700",
				},
				{
					family: "Inter",
					source: "framer",
					style: "normal",
					unicodeRange: "U+1F00-1FFF",
					url: "https://framerusercontent.com/assets/1K3W8DizY3v4emK8Mb08YHxTbs.woff2",
					weight: "700",
				},
				{
					family: "Inter",
					source: "framer",
					style: "normal",
					unicodeRange: "U+0370-03FF",
					url: "https://framerusercontent.com/assets/tUSCtfYVM1I1IchuyCwz9gDdQ.woff2",
					weight: "700",
				},
				{
					family: "Inter",
					source: "framer",
					style: "normal",
					unicodeRange:
						"U+0100-024F, U+0259, U+1E00-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF",
					url: "https://framerusercontent.com/assets/VgYFWiwsAC5OYxAycRXXvhze58.woff2",
					weight: "700",
				},
				{
					family: "Inter",
					source: "framer",
					style: "normal",
					unicodeRange:
						"U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD",
					url: "https://framerusercontent.com/assets/DXD0Q7LSl7HEvDzucnyLnGBHM.woff2",
					weight: "700",
				},
				{
					family: "Inter",
					source: "framer",
					style: "normal",
					unicodeRange:
						"U+0102-0103, U+0110-0111, U+0128-0129, U+0168-0169, U+01A0-01A1, U+01AF-01B0, U+1EA0-1EF9, U+20AB",
					url: "https://framerusercontent.com/assets/GIryZETIX4IFypco5pYZONKhJIo.woff2",
					weight: "700",
				},
				{
					family: "Inter",
					source: "framer",
					style: "normal",
					unicodeRange:
						"U+0460-052F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE2F",
					url: "https://framerusercontent.com/assets/5A3Ce6C9YYmCjpQx9M4inSaKU.woff2",
					weight: "500",
				},
				{
					family: "Inter",
					source: "framer",
					style: "normal",
					unicodeRange: "U+0301, U+0400-045F, U+0490-0491, U+04B0-04B1, U+2116",
					url: "https://framerusercontent.com/assets/Qx95Xyt0Ka3SGhinnbXIGpEIyP4.woff2",
					weight: "500",
				},
				{
					family: "Inter",
					source: "framer",
					style: "normal",
					unicodeRange: "U+1F00-1FFF",
					url: "https://framerusercontent.com/assets/6mJuEAguuIuMog10gGvH5d3cl8.woff2",
					weight: "500",
				},
				{
					family: "Inter",
					source: "framer",
					style: "normal",
					unicodeRange: "U+0370-03FF",
					url: "https://framerusercontent.com/assets/xYYWaj7wCU5zSQH0eXvSaS19wo.woff2",
					weight: "500",
				},
				{
					family: "Inter",
					source: "framer",
					style: "normal",
					unicodeRange:
						"U+0100-024F, U+0259, U+1E00-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF",
					url: "https://framerusercontent.com/assets/otTaNuNpVK4RbdlT7zDDdKvQBA.woff2",
					weight: "500",
				},
				{
					family: "Inter",
					source: "framer",
					style: "normal",
					unicodeRange:
						"U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD",
					url: "https://framerusercontent.com/assets/d3tHnaQIAeqiE5hGcRw4mmgWYU.woff2",
					weight: "500",
				},
				{
					family: "Inter",
					source: "framer",
					style: "normal",
					unicodeRange:
						"U+0102-0103, U+0110-0111, U+0128-0129, U+0168-0169, U+01A0-01A1, U+01AF-01B0, U+1EA0-1EF9, U+20AB",
					url: "https://framerusercontent.com/assets/DolVirEGb34pEXEp8t8FQBSK4.woff2",
					weight: "500",
				},
				{
					family: "Inter",
					source: "framer",
					style: "normal",
					unicodeRange:
						"U+0460-052F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE2F",
					url: "https://framerusercontent.com/assets/5vvr9Vy74if2I6bQbJvbw7SY1pQ.woff2",
					weight: "400",
				},
				{
					family: "Inter",
					source: "framer",
					style: "normal",
					unicodeRange: "U+0301, U+0400-045F, U+0490-0491, U+04B0-04B1, U+2116",
					url: "https://framerusercontent.com/assets/EOr0mi4hNtlgWNn9if640EZzXCo.woff2",
					weight: "400",
				},
				{
					family: "Inter",
					source: "framer",
					style: "normal",
					unicodeRange: "U+1F00-1FFF",
					url: "https://framerusercontent.com/assets/Y9k9QrlZAqio88Klkmbd8VoMQc.woff2",
					weight: "400",
				},
				{
					family: "Inter",
					source: "framer",
					style: "normal",
					unicodeRange: "U+0370-03FF",
					url: "https://framerusercontent.com/assets/OYrD2tBIBPvoJXiIHnLoOXnY9M.woff2",
					weight: "400",
				},
				{
					family: "Inter",
					source: "framer",
					style: "normal",
					unicodeRange:
						"U+0100-024F, U+0259, U+1E00-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF",
					url: "https://framerusercontent.com/assets/JeYwfuaPfZHQhEG8U5gtPDZ7WQ.woff2",
					weight: "400",
				},
				{
					family: "Inter",
					source: "framer",
					style: "normal",
					unicodeRange:
						"U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD",
					url: "https://framerusercontent.com/assets/vQyevYAyHtARFwPqUzQGpnDs.woff2",
					weight: "400",
				},
				{
					family: "Inter",
					source: "framer",
					style: "normal",
					unicodeRange:
						"U+0102-0103, U+0110-0111, U+0128-0129, U+0168-0169, U+01A0-01A1, U+01AF-01B0, U+1EA0-1EF9, U+20AB",
					url: "https://framerusercontent.com/assets/b6Y37FthZeALduNqHicBT6FutY.woff2",
					weight: "400",
				},
			],
		},
		...ButtonFonts,
		...getFontsFromSharedStyle(fonts),
	],
	{
		supportsExplicitInterCodegen: true,
	},
);

// virtual:login-form
import { WithFramerBreakpoints } from "unframer";
import { jsx } from "react/jsx-runtime";
var locales = [];
var defaultResponsiveVariants = {
	base: "LkBTgoEvc",
};
/** @type {function(Props): any} */
function ComponentWithRoot({ locale, ...rest }) {
	return (
		<ContextProviders
			routes={routes}
			framerSiteId={
				"4b3cbb0c992745214a4b30ad0a70c33cfe052c2a657df72dba4580f9855ea179"
			}
			locale={locale}
			locales={locales}
		>
			{jsx(stdin_default2, {
				...rest,
			})}
		</ContextProviders>
	);
}
/**
 * @type {import("unframer").UnframerBreakpoint}
 * Represents a responsive breakpoint for unframer.
 */

/**
 * @typedef VariantsMap
 * Partial record of UnframerBreakpoint to Props.variant, with a mandatory 'base' key.
 * { [key in UnframerBreakpoint]?: Props['variant'] } & { base: Props['variant'] }
 */

/**
 * Renders LoginFormFramerComponent for all breakpoints with a variants map. Variant prop is inferred per breakpoint.
 * @function
 * @param {Omit<Props, 'variant'> & {variants?: VariantsMap}} props
 * @returns {any}
 */
ComponentWithRoot.Responsive = ({ locale, ...rest }) => {
	return (
		<ContextProviders
			routes={routes}
			framerSiteId={
				"4b3cbb0c992745214a4b30ad0a70c33cfe052c2a657df72dba4580f9855ea179"
			}
			locale={locale}
			locales={locales}
		>
			<WithFramerBreakpoints
				Component={stdin_default2}
				variants={defaultResponsiveVariants}
				{...rest}
			/>
		</ContextProviders>
	);
};
Object.assign(ComponentWithRoot, stdin_default2);
var login_form_default = ComponentWithRoot;
export { login_form_default as default };
